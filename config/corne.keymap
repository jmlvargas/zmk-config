/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
// #define ZMK_POINTING_DEFAULT_MOVE_VAL 1000
// #define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include "keys_es_latin_american.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt { quick-tap-ms = <150>; };

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        GRAVE_: GRAVE_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_GRAVE &kp SPACE>;
            label = "GRAVE_";
        };

        CARET_: CARET_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_CARET &kp SPACE>;
            label = "CARET_";
        };

        TILDE_: TILDE_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ES_TILDE &kp SPACE>;
            label = "TILDE_";
        };
    };

    behaviors {
        DIV_SLH: DIV_SLH {
            compatible = "zmk,behavior-mod-morph";
            label = "DIV_SLH";
            bindings = <&kp ES_SLASH>, <&kp ES_BSLH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        HHT: HHT {
            compatible = "zmk,behavior-hold-tap";
            label = "HHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <125>;
            flavor = "hold-preferred";
            hold-while-undecided;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
        };

        QUOTES: QUOTES {
            compatible = "zmk,behavior-mod-morph";
            label = "QUOTES";
            bindings = <&kp ES_SINGLE_QUOTE>, <&kp ES_DOUBLE_QUOTES>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        GUI_ALT: GUI_ALT {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_ALT";
            #binding-cells = <0>;
            bindings = <&kp LWIN>, <&kp LALT>;

            tapping-term-ms = <250>;
        };

        TLD_CRT: TLD_CRT {
            compatible = "zmk,behavior-mod-morph";
            label = "TLD_CRT";
            bindings = <&kp ES_TILDE>, <&CARET_>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        PND_PCT: PND_PCT {
            compatible = "zmk,behavior-mod-morph";
            label = "PND_PCT";
            bindings = <&kp ES_POUND>, <&kp ES_PERCENT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qrt {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB                   &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O       &kp P           &kp BACKSPACE
&kp LSHIFT                &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L       &kp ES_ACUTE    &kp RSHIFT
&HHT LEFT_CONTROL ESCAPE  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp PERIOD  &kp ES_N_TILDE  &kp RCTRL
                                        &GUI_ALT  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &GUI_ALT
            >;
        };

        num {
            bindings = <
&mo 3   &kp F1  &kp F2           &kp F3   &kp F4   &kp F5     &kp INSERT       &kp N7   &kp N8  &kp N9  &kp PRINTSCREEN       &trans
&trans  &kp F6  &kp PRINTSCREEN  &kp DEL  &none    &kp F7     &kp CAPS         &kp N4   &kp N5  &kp N6  &kp ES_DOUBLE_QUOTES  &HHT RSHIFT ES_SINGLE_QUOTE
&trans  &kp F8  &kp F9           &kp F10  &kp F11  &kp F12    &kp PAUSE_BREAK  &kp N1   &kp N2  &kp N3  &kp C_MUTE            &trans
                                 &trans   &trans   &trans     &kp N0           &kp DOT  &trans
            >;
        };

        sym {
            bindings = <
&GRAVE_  &kp ES_EXCL    &kp ES_AT    &kp ES_LPAR  &kp ES_RPAR   &kp ES_IEXCL    &kp ES_IQMARK  &kp ES_PLUS  &kp ES_MINUS  &kp ES_STAR  &kp ES_QMARK          &kp PG_UP
&trans   &kp ES_DOLLAR  &kp ES_PIPE  &kp ES_AMPS  &kp ES_EQUAL  &PND_PCT        &kp LEFT       &kp DOWN     &kp UP        &kp RIGHT    &kp ES_DOUBLE_QUOTES  &HHT RSHIFT ES_SINGLE_QUOTE
&trans   &kp ES_LT      &kp ES_GT    &kp ES_LBRC  &kp ES_RBRC   &kp ES_LBKT     &kp ES_RBKT    &DIV_SLH     &kp HOME      &kp END      &TLD_CRT              &kp PAGE_DOWN
                                     &trans       &trans        &trans          &trans         &trans       &trans
            >;
        };

        bth {
            bindings = <
&none        &none         &none         &none       &none  &out OUT_TOG    &none  &none  &none  &none  &none  &none
&none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_NXT  &none  &none           &none  &none  &none  &none  &none  &none
&bootloader  &none         &none         &bt BT_CLR  &none  &none           &none  &none  &none  &none  &none  &bootloader
                                         &none       &none  &none           &none  &none  &none
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
