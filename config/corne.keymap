/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_es_latin_american.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&caps_word {
    continue-list = <UNDERSCORE BACKSPACE DELETE SLASH>;
    mods = <(MOD_LSFT)>;
};

&lt {
    flavor = "hold-preferred";
    tapping-term-ms = <160>;
    quick-tap-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        bootldr_l {
            bindings = <&bootloader>;
            key-positions = <24 29>;
            layers = <2 4>;
        };

        bootldr_r {
            bindings = <&bootloader>;
            key-positions = <30 35>;
            layers = <1 4>;
        };

        reset_l {
            bindings = <&sys_reset>;
            key-positions = <0 5>;
            layers = <2 4>;
        };

        reset_r {
            bindings = <&sys_reset>;
            key-positions = <6 11>;
            layers = <1 4>;
        };

        clear_bt_profile {
            bindings = <&bt BT_CLR>;
            key-positions = <10 11>;
            layers = <4>;
        };
    };

    macros {
        shift: shift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "SHIFT";
        };

        as: as {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AS";
        };

        dmkp: delayed_modkp {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&macro_param_2to1 &kp MACRO_PLACEHOLDER>,
                <&macro_wait_time 80>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;

            label = "DELAYED_MODKP";
        };

        la_grave: tildegrave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(BACKSLASH) &kp SPACE>;
            label = "TILDEGRAVE";
        };

        la_bullet: la_bullet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(COMMA)>;
            label = "LA_BULLET";
        };

        la_cent: la_cent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(ES_C)>;
            label = "LA_CENT";
        };

        win_close: win_close {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(F4)>;
            label = "WIN_CLOSE";
        };

        win_max: win_max {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(F10)>;
            label = "WIN_MAX";
        };

        win_min: win_min {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(F9)>;
            label = "WIN_MIN";
        };

        win_tile_l: win_tile_l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LEFT)>;
            label = "WIN_TILE_L";
        };

        win_tile_r: win_tile_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(RIGHT)>;
            label = "WIN_TILE_RIGHT";
        };

        win_tile_t: win_tile_t {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(UP)>;
            label = "WIN_TILE_T";
        };

        win_tile_b: win_tile_b {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(DOWN)>;
            label = "WIN_TILE_B";
        };
    };

    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            bindings = <&shift>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            flavor = "tap-preferred";
        };

        mp_quo: mp_quo {
            compatible = "zmk,behavior-mod-morph";
            label = "MP_QUO";
            bindings = <&kp ES_SINGLE_QUOTE>, <&kp ES_DOUBLE_QUOTES>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 11 0 23 35 41 36 24 12 38 39>;
            flavor = "balanced";
        };

        ht_hp: ht_hp {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_HP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 11 0 23 35 41 36 24 12 38 39>;
            flavor = "hold-preferred";
        };

        td_sym_num: td_sym_num {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SYM_NUM";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 3>;

            tapping-term-ms = <300>;
        };

        td_ctl_nav: td_ctl_nav {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CTL_NAV";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL>, <&mo 2>;

            tapping-term-ms = <300>;
        };

        td_nav_alt: td_nav_alt {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_NAV_ALT";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&kp LALT>;

            tapping-term-ms = <300>;
        };

        td_shf_cap: td_shf_cap {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHF_CAP";
            #binding-cells = <0>;
            bindings = <&kp RSHIFT>, <&kp CLCK>;

            tapping-term-ms = <300>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qrt {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E        &kp R      &kp T        &kp Y      &kp U        &kp I        &kp O       &kp P           &kp BACKSPACE
&kp LSHIFT  &kp A  &kp S  &kp D        &kp F      &kp G        &kp H      &kp J        &kp K        &kp L       &kp ES_N_TILDE  &td_shf_cap
&kp LWIN    &kp Z  &kp X  &kp C        &kp V      &kp B        &kp N      &kp M        &kp COMMA    &kp PERIOD  &kp ES_ACUTE    &lt 4 ESCAPE
                          &td_nav_alt  &kp LCTRL  &kp SPACE    &kp ENTER  &td_sym_num  &td_nav_alt
            >;
        };

        sym {
            bindings = <
&la_grave  &kp ES_EXCL       &kp ES_AT      &kp ES_EQUAL  &kp ES_DOLLAR  &kp ES_PERCENT    &none        &none              &kp ES_LPAR  &kp ES_RPAR  &kp ES_ASTRK  &kp DEL
&trans     &kp ES_IEXCL      &kp ES_TILDE   &kp ES_AMPS   &kp ES_PIPE    &kp ES_POUND      &kp ES_PLUS  &kp ES_LBRC        &kp ES_LBKT  &kp ES_RBKT  &kp ES_MINUS  &mp_quo
&trans     &kp ES_BACKSLASH  &kp ES_IQMARK  &kp ES_QMARK  &kp ES_CARET   &none             &none        &kp ES_RBRC        &kp ES_LT    &kp ES_GT    &kp ES_SLASH  &trans
                                            &kp LALT      &mo 3          &trans            &kp SPACE    &kp RIGHT_CONTROL  &kp LALT
            >;
        };

        nav {
            bindings = <
&kp ESCAPE  &none       &kp CLCK      &kp ENTER  &kp INS           &none     &none     &none             &none     &none      &kp PG_UP  &kp DELETE
&trans      &kp C_MUTE  &kp C_VOL_DN  &kp DEL    &kp C_VOL_UP      &none     &kp LEFT  &kp DOWN          &kp UP    &kp RIGHT  &kp PG_DN  &trans
&trans      &none       &none         &none      &none             &none     &none     &none             &kp HOME  &kp END    &none      &trans
                                      &kp LALT   &kp LEFT_CONTROL  &trans    &trans    &kp LEFT_CONTROL  &kp LALT
            >;
        };

        num {
            bindings = <
&kp ESCAPE  &none       &kp CLCK      &kp ENTER  &kp INSERT        &none     &kp ES_PERIOD  &kp ES_N7         &kp ES_N8  &kp ES_N9  &kp ES_ASTRK  &kp BACKSPACE
&trans      &kp C_MUTE  &kp C_VOL_DN  &kp DEL    &kp C_VOL_UP      &none     &kp ES_PLUS    &kp ES_N4         &kp ES_N5  &kp ES_N6  &kp ES_MINUS  &kp ES_DOT
&trans      &none       &none         &none      &none             &none     &kp ES_N0      &kp ES_N1         &kp ES_N2  &kp ES_N3  &kp ES_SLASH  &kp ES_EQUAL
                                      &kp LALT   &kp LEFT_CONTROL  &trans    &trans         &kp LEFT_CONTROL  &kp LALT
            >;
        };

        sys {
            bindings = <
&kp ESCAPE  &none       &kp CLCK      &kp ENTER  &kp INS           &none     &kp F1  &kp F2     &kp F3    &kp F4   &bt BT_SEL 0  &kp PAUSE_BREAK
&trans      &kp C_MUTE  &kp C_VOL_DN  &kp DEL    &kp C_VOL_UP      &none     &kp F5  &kp F6     &kp F7    &kp F8   &bt BT_NXT    &trans
&trans      &none       &none         &none      &none             &none     &kp F9  &kp F10    &kp F11   &kp F12  &none         &none
                                      &kp LALT   &kp LEFT_CONTROL  &trans    &trans  &kp LCTRL  &kp LALT
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
