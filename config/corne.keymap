/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&sk { /delete-property/ ignore-modifiers; };

/ {
    combos {
        compatible = "zmk,combos";

        ctrl {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <26 27>;
            require-prior-idle-ms = <100>;
            timeout-ms = <30>;
        };

        cmd {
            bindings = <&kp LEFT_WIN>;
            key-positions = <37 36>;
            timeout-ms = <30>;
            require-prior-idle-ms = <100>;
        };

        alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <14 15>;
            timeout-ms = <30>;
            require-prior-idle-ms = <100>;
        };

        shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <2 3>;
            timeout-ms = <30>;
            require-prior-idle-ms = <100>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <17 18>;
            timeout-ms = <30>;
            require-prior-idle-ms = <100>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <32 33>;
            timeout-ms = <30>;
            require-prior-idle-ms = <100>;
        };

        tg_kp_layer {
            bindings = <&tog 0>;
            key-positions = <40 41>;
        };
    };

    macros {
        shift: shift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "SHIFT";
        };

        as: as {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AS";
        };
    };

    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            bindings = <&shift>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            flavor = "tap-preferred";
        };

        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            flavor = "tap-preferred";
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q        &kp W            &kp E                &kp R          &kp T        &kp Y      &kp U          &kp I                 &kp O                 &kp P                &kp ESCAPE
&kp LEFT_CONTROL  &hml LWIN A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LSHIFT F  &kp G        &kp H      &hmr RSHIFT J  &hmr RIGHT_CONTROL K  &hmr LA(RIGHT_ALT) L  &hmr SEMICOLON RWIN  &kp SQT
&sk LSHFT         &kp Z        &kp X            &kp C                &kp V          &kp B        &kp N      &kp M          &kp COMMA             &kp DOT               &kp FSLH             &kp LEFT_ALT
                                                &kp LCMD             &mo 2          &kp ENTER    &kp SPACE  &kp BACKSPACE  &mo 1
            >;
        };

        fnum {
            bindings = <
&trans  &kp F2        &kp F3            &kp F4                &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp EQUAL  &kp N7          &kp N8                 &kp N9            &kp KP_MULTIPLY    &kp ESC
&trans  &hml LWIN F5  &hml LEFT_ALT F8  &hml LEFT_CONTROL F9  &hml LSHIFT LBRC      &kp RIGHT_BRACE          &kp N0     &hmr RSHIFT N4  &hmr RIGHT_CONTROL N5  &hmr LEFT_ALT N6  &hmr RWIN KP_PLUS  &kp KP_SUBTRACT
&trans  &kp F10       &kp F11           &tog 1                &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp DOT    &kp N1          &kp N2                 &kp N3            &kp KP_DIVIDE      &kp LEFT_ALT
                                        &trans                &mo 2                 &trans                   &trans     &trans          &trans
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE   &kp EXCL      &kp AT        &kp HASH          &kp DLLR      &kp PRCNT       &kp CARET      &kp AMPS     &kp ASTRK     &kp MINUS  &kp PLUS       &kp PIPE
&none       &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LSHIFT    &none           &kp LEFT       &kp DOWN     &kp UP_ARROW  &kp RIGHT  &kp UNDER      &kp TILDE
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4    &kp PAGE_DOWN  &kp PAGE_UP  &kp HOME      &kp END    &kp BACKSLASH  &none
                                        &trans            &trans        &trans          &trans         &kp DEL      &trans
            >;
        };
    };
};
