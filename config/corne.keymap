/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&sk { /delete-property/ ignore-modifiers; };

/ {
    combos {
        compatible = "zmk,combos";

        syst_layer {
            bindings = <&tog 4>;
            key-positions = <35 23 11>;
            timeout-ms = <30>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        base_layer {
            bindings = <&to 0>;
            key-positions = <11 35>;
            timeout-ms = <30>;
            require-prior-idle-ms = <100>;
        };

        tog_fnum_layer {
            bindings = <&tog 2>;
            key-positions = <23 35>;
            timeout-ms = <30>;
            require-prior-idle-ms = <100>;
            layers = <0>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <28 29>;
            timeout-ms = <30>;
            require-prior-idle-ms = <100>;
            layers = <3>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 17>;
            timeout-ms = <30>;
            require-prior-idle-ms = <100>;
            layers = <3>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <4 5>;
            timeout-ms = <30>;
            require-prior-idle-ms = <100>;
            layers = <3>;
        };
    };

    macros {
        shift: shift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "SHIFT";
        };

        as: as {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AS";
        };
    };

    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            bindings = <&shift>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            flavor = "tap-preferred";
        };

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <165>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            flavor = "tap-preferred";
            quick-tap-ms = <250>;
            require-prior-idle-ms = <125>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <165>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "tap-preferred";
            quick-tap-ms = <250>;
            require-prior-idle-ms = <125>;
        };

        ssw: symbol_switch {
            compatible = "zmk,behavior-hold-tap";
            label = "SYMBOL_SWITCH";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <165>;
            flavor = "balanced";
            quick-tap-ms = <250>;
        };

        lsm: layer_switch_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_SWITCH_MODS";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            flavor = "hold-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q            &kp W          &kp E                &kp R            &kp T        &kp Y      &kp U            &kp I                 &kp O          &kp P                  &kp ESCAPE
&sk LEFT_CONTROL  &hml LEFT_GUI A  &hml LSHIFT S  &hml LEFT_CONTROL D  &hml LEFT_ALT F  &kp G        &kp H      &hmr LEFT_ALT J  &hmr RIGHT_CONTROL K  &hmr RSHIFT L  &kp SEMI               &ssw MINUS LEFT_BRACKET
&sk LSHFT         &kp Z            &kp X          &kp C                &kp V            &kp B        &kp N      &kp M            &kp COMMA             &kp DOT        &ssw RA(MINUS) LS(N7)  &kp RALT
                                                  &kp LCMD             &mo 3            &kp ENTER    &kp SPACE  &mo 1            &kp BACKSPACE
            >;
        };

        fctl {
            bindings = <
&trans  &kp PRINTSCREEN  &caps_word  &kp INS           &none         &ssw LS(BACKSLASH) LS(SINGLE_QUOTE)    &kp F1    &kp F2          &kp F3        &kp F4     &kp F5   &kp PAUSE_BREAK
&trans  &none            &kp LSHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &ssw LS(N9) LS(N8)                     &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp F11  &kp F12
&trans  &none            &kp LC(X)   &kp LC(C)         &kp LC(V)     &ssw BACKSLASH SINGLE_QUOTE            &kp F6    &kp F7          &kp F8        &kp F9     &kp F10  &kp LEFT_ALT
                                     &trans            &mo 3         &trans                                 &trans    &trans          &kp DELETE
            >;
        };

        kpad {
            bindings = <
&trans  &kp F1            &kp F2          &kp F3                &kp F4            &ssw LS(BACKSLASH) LS(SINGLE_QUOTE)    &kp RA(SINGLE_QUOTE)  &ssw LS(NUMBER_6) N7  &ssw LS(RIGHT_BRACKET) N8  &ssw LS(N0) N9        &ssw RIGHT_BRACKET N0  &trans
&trans  &hml LEFT_GUI F5  &hml LSHIFT F6  &hml LEFT_CONTROL F7  &hml LEFT_ALT F8  &ssw LS(N9) LS(N8)                     &none                 &hmr LEFT_ALT N4      &hmr RIGHT_CONTROL N5      &hmr RSHIFT N6        &ssw LS(SLASH) SLASH   &ssw MINUS LS(NUMBER_2)
&trans  &kp F9            &kp F10         &kp F11               &kp F12           &ssw BACKSLASH SINGLE_QUOTE            &none                 &kp N1                &ssw COMMA NUMBER_2        &ssw PERIOD NUMBER_3  &trans                 &trans
                                          &trans                &mo 3             &trans                                 &trans                &trans                &trans
            >;
        };

        symb {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&ssw RA(NUMBER_4) LS(GRAVE)  &ssw LS(EQUAL) EXCL     &kp RA(Q)             &kp HASH             &kp DLLR                &kp PRCNT    &kp RA(SINGLE_QUOTE)  &kp LS(NUMBER_6)    &kp LS(RIGHT_BRACKET)  &kp LS(N0)                &kp RIGHT_BRACKET     &kp GRAVE
&trans                       &hml LEFT_GUI NUMBER_1  &hml LSHIFT NUMBER_2  &hml LCTRL NUMBER_3  &hml LEFT_ALT NUMBER_4  &kp N5       &kp LEFT              &kp DOWN            &kp UP_ARROW           &kp RIGHT                 &ssw LS(SLASH) SLASH  &ssw MINUS LS(NUMBER_2)
&trans                       &kp NUMBER_6            &kp N7                &kp N8               &kp N9                  &kp N0       &ssw PAGE_UP HOME     &ssw PAGE_DOWN END  &kp NON_US_BACKSLASH   &kp LS(NON_US_BACKSLASH)  &ssw EQUAL LS(MINUS)  &kp LEFT_ALT
                                                                           &trans               &trans                  &trans       &trans                &trans              &kp DEL
            >;
        };

        syst {
            bindings = <
&to 0       &none         &none         &none         &sys_reset    &none          &none        &sys_reset  &none  &none  &none  &to 0
&none       &none         &none         &trans        &none         &none          &none        &none       &none  &none  &none  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bootloader    &bootloader  &none       &none  &none  &none  &none
                                        &none         &none         &none          &none        &none       &none
            >;
        };
    };
};
